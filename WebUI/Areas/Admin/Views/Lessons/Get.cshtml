@using WebUI.Areas.Admin.Models;
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    List<AllGroups> groups = ViewBag.Groups.Result as List<AllGroups>;

}
@*
@model ICollection<AllGroups>*@


<!DOCTYPE html>
<html lang="en">

<!-- Mirrored from akademi.dexignlab.com/xhtml/app-calender.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 20 Jul 2023 19:29:37 GMT -->
<head>

    <!-- All Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="author" content="DexignLab">
    <meta name="robots" content="">
    <meta name="keywords" content="school, school admin, education, academy, admin dashboard, college, college management, education management, institute, school management, school management system, student management, teacher management, university, university management">
    <meta name="description" content="Discover Akademi - the ultimate admin dashboard and Bootstrap 5 template. Specially designed for professionals, and for business. Akademi provides advanced features and an easy-to-use interface for creating a top-quality website with School and Education Dashboard">
    <meta property="og:title" content="Akademi : School and Education Management Admin Dashboard Template">
    <meta property="og:description" content="Akademi - the ultimate admin dashboard and Bootstrap 5 template. Specially designed for professionals, and for business. Akademi provides advanced features and an easy-to-use interface for creating a top-quality website with School and Education Dashboard">
    <meta property="og:image" content="social-image.png">
    <meta name="format-detection" content="telephone=no">

    <!-- Mobile Specific -->
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Page Title Here -->
    <title>Akademi : School and Education Management Admin Dashboard Template</title>

    <!-- FAVICONS ICON -->
    <link rel="shortcut icon" type="image/png" href="~/images/favicon.png">
    <link href="~/vendor/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/vendor/fullcalendar-5.11.0/lib/main.css">
    <link href="~/jquery-nice-select/css/nice-select.css" rel="stylesheet">

    <link href="https://fonts.googleapis.com/css2?family=Material+Icons" rel="stylesheet">
    <link href="~/css/style.css" rel="stylesheet">


</head>

<body>



    <div class="content-body pe-0">
        <div class="container-fluid">
            <!-- row -->

            <div class="row">
                <div class="col-lg-3 col-xl-3 col-xxl-3">
                    <div class="card">
                        <div class="card-body">
                            <h4 class="card-intro-title">Calendar</h4>

                            <div class="">
                                <div id="external-events" class="my-3">
                                    <p>Drag and drop your event or click in the calendar</p>
                                    @foreach (var group in groups)
                                    {

                                        <div class="external-event btn-primary light groupName" id="draggableEl" data-class="bg-primary"><i class="fa fa-move"></i><span>@group.Name</span></div>
                                    }
                                </div>

                                <a href="javascript:void(0);" data-bs-toggle="modal" data-bs-target="#add-category" class="btn btn-primary btn-event w-100">
                                    <span class="align-middle"><i class="ti-plus me-2"></i></span> Create New
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-9 col-xl-9 col-xxl-9">
                    <div class="card">
                        <div class="card-body">
                            <div id="calendar" class="app-fullcalendar "></div>
                        </div>
                    </div>
                </div>
                <!-- BEGIN MODAL -->
                <div class="modal fade none-border" id="event-modal">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title"><strong>Add New Event</strong></h4>
                            </div>
                            <div class="modal-body"></div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default waves-effect" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-success save-event waves-effect waves-light">
                                    Create
                                    event
                                </button>

                                <button type="button" class="btn btn-danger delete-event waves-effect waves-light" data-bs-toggle="modal">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Modal Add Category -->
                <div class="modal fade none-border" id="add-category">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title"><strong>Add a category</strong></h4>
                            </div>
                            <div class="modal-body">
                                <form>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="control-label form-label">Category Name</label>
                                            <input class="form-control form-white" placeholder="Enter name" type="text" name="category-name">
                                        </div>
                                        <div class="col-md-6">
                                            <label class="control-label form-label">Choose Category Color</label>
                                            <select class="form-control form-white" data-placeholder="Choose a color..." name="category-color">
                                                <option value="success">Success</option>
                                                <option value="danger">Danger</option>
                                                <option value="info">Info</option>
                                                <option value="pink">Pink</option>
                                                <option value="primary">Primary</option>
                                                <option value="warning">Warning</option>
                                            </select>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-danger light waves-effect" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary waves-effect waves-light save-category" data-bs-toggle="modal">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>





    <!-- Required vendors -->
    <script src="~/vendor/global/global.min.js"></script>
    <script src="~/vendor/moment/moment.min.js"></script>


    <script src="~/vendor/fullcalendar-5.11.0/lib/main.js"></script>
    <script src="~/vendor/jquery-nice-select/js/jquery.nice-select.min.js"></script>
    <script src="~/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>

    <script src="~/js/calendar.js"></script>
    <script src="~/js/custom.min.js"></script>
    <script src="~/js/dlabnav-init.js"></script>
    <script src="~/js/demo.js"></script>
    <script src="~/js/styleSwitcher.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/5.9.0/interaction.min.js"></script>
    <script>
        
        document.addEventListener('DOMContentLoaded', function () {
            var calendarEl = document.getElementById('calendar');
            var draggableEl = document.getElementById('draggableEl');
            var eventStartTime = document.querySelectorAll(".fc-event-dot")
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                droppable: true,
                editable: true,
                eventResizableFromStart: true,
                selectable: true, 
                selectHelper: true,
                timeFormat: {
                    '': 'h:mm{ - h:mm}'
                },
                events: {
                    // this object will be "parsed" into an Event Object
                    //title: 'Front-end',
                    //start: '2023-08-21',
                    //end: '2023-08-21',
                  url:  '/Admin/Lessons/GetAllLessons',
             
                    //  method: "GET",
                    // });
                    success: function(response){
                        allLessons = response;
                        console.log(response)
                    }
            },
                locale: 'az',
                eventReceive: function (event) {
                    let start = event.event.start; 
                    let end = event.event.end;
                    let groupNme = document.querySelector(".groupName").innerHTML;
                    //let startTime = `${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`;
                    //let endTime = `${end.getHours()}:${end.getMinutes()}:${end.getSeconds()}`;
                    function addOneDay(date = new Date()) {
                        date.setDate(date.getDate() + 1);

                        return date;
                    };
                    let endTime = new Date(startTime);
                    endTime.setHours(endTime.getHours() + 1);
                    let requestData = {
                        Name: event.event.title,
                        Group: event.event.title,
                        StartTime: addOneDay(start),
                        EndTime: endTime,
                        
                    };

                    $.ajax({
                        type: 'POST',
                        url: '/Admin/Lessons/CreateLesson',

                        data: JSON.stringify(requestData),
                        contentType: 'application/json',
                     success: function(response){
                         
                        allLessons.push(response);
                        console.log(allLessons);
                        
                    }
                    });
                },

                //select: function(date, jsEvent, view) {
                //   var  getYear = date.view.getCurrentData().currentDate.getUTCFullYear();
                //   var  getMonth = date.view.getCurrentData().currentDate.getUTCMonth();
                //   var  getDay = date.view.getCurrentData().currentDate.getUTCDate();
                //     console.log(`${getYear}-${getMonth}-${getDay}`);
                //    //calendar.changeView('timeGridDay', date.view.getCurrentData().currentDate);
                //    //$(calendarEl).fullCalendar('gotoDate', '2023-10-08');
                //    // $('#calendar').fullCalendar('changeView','agendaDay');
                //     //fullCalendar('gotoDate', date);
                //},
                eventClick: function(event){
                    console.log("Event clicked ", event.event.id);
                    //
                                    window.location.href = `/Admin/Lessons/UpdateLesson/${event.event.id}`; // Change to the appropriate property
                 
                    //$.ajax({
                    //                type: 'GET',
                    //                url: `/Admin/Lessons/UpdateLesson/${event.event.id}`,
                    //                success: function (data) {
                    //                    // Assuming data contains the response from the server
                    //                    // Navigate to the desired page
                                     
                    //                },

                    //    });
                },
                 eventDragStop: function(info) {
                 
                          let draggedEvent = info.event;
                          //let index = allLessons.find(item => 
                          //    item.Id == draggedEvent.id
                          //);
                          //console.log(index);
                    //       $.ajax({
                    //            type: 'GET',
                    //            url: `/Admin/Lessons/GetById/${draggedEvent.id}`,

                              
                    //            contentType: 'application/json',
                    //            success: function (response) {
                    //                   console.log("event added", )

                    //    },
                    //});
                    console.log(draggedEvent.id);
                          // Get the dropped coordinates
                          let droppedX = info.jsEvent.clientX;
                          let droppedY = info.jsEvent.clientY;

                          // Get the calendar's bounding box
                          let calendarRect = calendarEl.getBoundingClientRect();

                          // Check if the event was dropped outside the calendar
                          if (
                              droppedX < calendarRect.left ||
                              droppedX > calendarRect.right ||
                              droppedY < calendarRect.top ||
                              droppedY > calendarRect.bottom
                          ) {
                                $.ajax({
                                type: 'GET',
                                url: `/Admin/Lessons/DeleteLesson/${draggedEvent.id}`,
                                contentType: 'application/json',
                                success: function (response) {
                                       console.log("event added", draggedEvent.id)

                        },
                        error: e => console.log(draggedEvent.id)
                    });
                              // Delete the event
                              draggedEvent.remove();
                              
                          }
        },
            });
         

            calendar.render();
            new Draggable(draggableEl);
        });

    </script>

</body>

<!-- Mirrored from akademi.dexignlab.com/xhtml/app-calender.html by HTTrack Website Copier/3.x [XR&CO'2014], Thu, 20 Jul 2023 19:29:37 GMT -->
</html>